name: autobuild

on:
  push:
    tags:
      - "*"

env:
  PROJECT_NAME: "SAS_Dumper"
  DOTNET_SDK_VERSION: 7.0.x

jobs:
  build:

    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Verify .NET Core
        run: dotnet --info

      - name: Restore packages in preparation for ${{ env.PROJECT_NAME }} publishing
        run: dotnet restore ${{ env.PROJECT_NAME }} -p:ContinuousIntegrationBuild=true --nologo

      - name: Publish ${{ env.PROJECT_NAME }}
        run: dotnet publish ${{ env.PROJECT_NAME }} -o ./tmp/ -c Release

      - name: Zip files
        run: 7z a -bd -slp -tzip -mm=Deflate -mx=5 -mfb=150 -mpass=10 "./dist/${{ env.PROJECT_NAME }}.zip" "./tmp/${{ env.PROJECT_NAME }}.dll"

      - name: Upload ${{ env.PROJECT_NAME }}
        continue-on-error: true
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ env.PROJECT_NAME }}.zip
          path: ./dist/${{ env.PROJECT_NAME }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Download ${{ env.PROJECT_NAME }} artifact from windows-latest
        uses: actions/download-artifact@v3.0.1
        with:
          name: ${{ env.PROJECT_NAME }}.zip
          path: out

      - name: Create ${{ env.PROJECT_NAME }} GitHub release
        id: github_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ env.PROJECT_NAME }} ${{ github.ref_name }}
          body: |
            ![SAS_Dumper Release](https://img.shields.io/badge/SAS_Dumper-${{ github.ref_name }}-brightgreen) ![Downloads](https://img.shields.io/github/downloads/chr233/SAS_Dumper/${{ github.ref_name }}/total?label=Downloads)

            release created bt github actions
          prerelease: true

      - name: Upload ${{ env.PROJECT_NAME }} to GitHub release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.github_release.outputs.upload_url }}
          asset_path: out/${{ env.PROJECT_NAME }}.zip
          asset_name: ${{ env.PROJECT_NAME }}.zip
          asset_content_type: application/zip
